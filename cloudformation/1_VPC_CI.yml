#-------------------------------------------------------------------
# Subnet
#-------------------------------------------------------------------
#Public Subnet A
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-subnet-public-1a"

#Public Subnet C
  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:  !Select
        - 1
        - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-subnet-public-1c"

#Private Subnet A
  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:  !Select
        - 0
        - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-subnet-private-1a"

#Private Subnet C
  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:  !Select
        - 1
        - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-subnet-private-1c"

#-------------------------------------------------------------------
# Route Table, Rouing
#-------------------------------------------------------------------
#Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-routetable-public"

#Public Routing
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0  #localhost向けルーティングは不要
      GatewayId: !Ref InternetGateway

#Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-routetable-private"

#-------------------------------------------------------------------
# Route Association
#-------------------------------------------------------------------
#Public Route Association A
  PublicRouteAssoc1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1a
      RouteTableId: !Ref PublicRouteTable

#Public Route Association C
  PublicRouteAssoc1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1c
      RouteTableId: !Ref PublicRouteTable

#Private Route Association A
  PrivateRouteAssoc1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1a
      RouteTableId: !Ref PrivateRouteTable

#Private Route Association C
  PrivateRouteAssoc1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1c
      RouteTableId: !Ref PrivateRouteTable

Outputs:
#-------------------------------------------------------------------
# Outputs
#-------------------------------------------------------------------
#VPC
  VPC:
    Value: !Ref VPC
    Export: 
      Name: VPC

#Public Subnet 1a
  PublicSubnet1a:
    Value: !Ref PublicSubnet1a
    Export: 
      Name: PublicSubnet1a

#Public Subnet 1c
  PublicSubnet1c:
    Value: !Ref PublicSubnet1c
    Export: 
      Name: PublicSubnet1c

#Private Subnet 1a
  PrivateSubnet1a:
    Value: !Ref PrivateSubnet1a
    Export: 
      Name: PrivateSubnet1a

#Private Subnet 1c
  PrivateSubnet1c:
    Value: !Ref PrivateSubnet1c
    Export: 
      Name: PrivateSubnet1c